###########################################################
# Copyright (c) 2016-2020 Cambridge Semantics Incorporated.
# All rights reserved.
###########################################################

apiVersion: anzograph.clusters.cambridgesemantics.com/v1beta1
kind: AnzoGraph
metadata:
  name: azg02
  labels:
    testkey1: testval1
    testkey2: testval3
spec:
  # Add fields here
  serviceAccountName: anzograph-operator
  size: 1
  csp: "google"
  #allInOneImage:
  #  registry: "docker.io"
  #  name: "cambridgesemantics/anzograph"
  #  tag: "latest"
  #  pullPolicy: "IfNotPresent"
  frontendImage:
    registry: "docker.io"
    name: "cambridgesemantics/anzograph-frontend"
    tag: "latest"
    pullPolicy: "IfNotPresent"
  dbImage:
    registry: "docker.io"
    name: "cambridgesemantics/anzograph-db"
    tag: "latest"
    pullPolicy: "IfNotPresent"
  #version: ""
  #uiCredentials:
  #  uiAdminUser: "admin"
  #  uiAdminPassword: "Passw0rd1"
  #  uiQueryUser: "query1"
  #  uiQueryUserPassword: "Passw0rd2"
  #grpcCredentials:
  #  grpcAdminUser: "admin1"
  #  grpcAdminPassword: "Passw0rd3"
  #  grpcQueryUser: "query2"
  #  grpcQueryUserPassword: "Passw0rd4"
  #uiLbService:
  #  jettyHTTPSPort: 443
  #  jettyHTTPSTargetPort: 8443
  #  jettyHTTPPort: 80
  #  jettyHTTPTargetPort: 8080
  #deployFrontend: true
  #license: ""
  #nodeSelector:
  #  cloud.google.com/gke-nodepool: "csi-azg-n1-standard-8-preemptible"
  #dbResources:
  #  requests:
  #    cpu: "2001m"
  #    memory: "7001Mi"
  #  limits:
  #    cpu: "16000m"
  #    memory: "48000Mi"
  #frontendResources:
  #  requests:
  #    cpu: "2002m"
  #    memory: "4002Mi"
  #  limits:
  #    cpu: "7000m"
  #    memory: "15000Mi"
  #uiUserCerts:
  #  uiUserServiceCert: |
  #  uiUserServiceKey: |
  #  uiUserCACert: |
  #keystoreCredentials:
  #  javaKeystorePassword: "PasSw00rd3"
  #  javaKeymanagerPassword: "PasSw00rd3"
  #nfs:
  #  persistentVolume:
  #    storageCapacity: "1Gi"
  #    path: "/var/nfsshare"
  #    server: "10.104.20.4"
  #  persistentVolumeClaim:
  #    storageRequest: "1Gi"
  #  accessModes:
  #  - ReadWriteMany
  #  mountPath: "/mountnfs"
  #  mountOptions:
  #  - hard
  #  - nfsvers=4.1
  #AnzoGraph's settings can be defined by named settings bundles called profiles.
  #currently three profiles are supported:
  #azgSettingsProfile: "anzo"
  #Default value is standalone, specified as below
  #azgSettingsProfile: "standalone"
  #azgSettingsProfile: "custom"
  #NOTE: When value of azgSettingsProfile is 'custom', also specify azgSettings parameter,
  # which will create customized settings.conf for AnzoGraph.
  # Uncomment and provide key value pairs of Anzograph settings variable.
  #azgSettings:
  #  enable_sparql_protocol: "false"
  #  xray_sth_spool_maxgb: "1"
  #  allow_thp_against_recommendations: "true"
  #  extensions_dir: "/opt/anzograph/lib/udx/cpp,/opt/anzograph/lib/udx/jvm"
  # Add toleration to the pods scheduled under Anzograph Db.
  #dbTolerations:
  #- key: "node.kubernetes.io/not-ready"
  #  operator: "Exists"
  #  effect: "NoExecute"
  #  tolerationSeconds: 600
  #- key: "node.kubernetes.io/unreachable"
  #  operator: "Exists"
  #  effect: "NoExecute"
  #  tolerationSeconds: 600
  # Add toleration to the pods scheduled under Anzograph Frontend.
  #frontendTolerations:
  #- key: "node.kubernetes.io/not-ready"
  #  operator: "Exists"
  #  effect: "NoExecute"
  #  tolerationSeconds: 600
  #- key: "node.kubernetes.io/unreachable"
  #  operator: "Exists"
  #  effect: "NoExecute"
  #  tolerationSeconds: 600
  # If user wants to specify podAffinity and/or AntiAffinity, use below parameter.
  #dbAffinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: cambridgesemantics.com/node-purpose
  #          operator: In
  #          values:
  #          - anzograph-db
  #frontendAffinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: cambridgesemantics.com/node-purpose
  #          operator: In
  #          values:
  #          - anzograph-frontend
  # Specify annotations and ip ranges for db load balancer service
  #dbService:
  #  annotations:
  # Sample annotation to use external load balancer, set this to "true" for internal load balancer
  #    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
  # Sample annotations for idle timeout change and healthcheck interval, annotations mostly to vary as per CSP
  #    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
  #    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "40"
  # Annotation for AWS NLB
  #    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  # Annotation for GCP internal load balancer
  #    cloud.google.com/load-balancer-type: "Internal"
  # Annotation for Azure internal load balancer
  #    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  #  loadBalancerSourceRanges:
  #    - "10.107.0.0/24"
  #    - "10.107.2.0/24"
  # Specify annotations and ip ranges for frontend load balancer service, annotations mostly to vary as per CSP
  #frontendService:
  #  annotations:
  # Sample annotation to use AWS external load balancer, set this to "true" for internal load balancer
  #    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
  # Sample annotations for AWS idle timeout change and healthcheck interval
  #    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
  #    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "40"
  # Annotation for AWS NLB
  #    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  # Annotation for GCP internal load balancer
  #    cloud.google.com/load-balancer-type: "Internal"
  # Annotation for Azure internal load balancer
  #    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  #  loadBalancerSourceRanges:
  #    - "10.107.0.0/24"
  #    - "10.107.2.0/24"
